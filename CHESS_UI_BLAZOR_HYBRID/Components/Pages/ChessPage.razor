@page "/start"
@inject Frontend.Controller.PuzzleManager PuzzleManager


@if (!_isGameActive)
{
<div class="start-container">
    <h1>Welcome to Survival Mode</h1>
    <button class="start-button" @onclick="StartSurvival">Start Survival</button>
</div>
}
else
{
<div class="game-container">
    <p>Score: @PuzzleManager.score</p>
    <p>Streak: @PuzzleManager.streak</p>
    <p>Strikes: @PuzzleManager.strikes / 3</p>
    @if (PuzzleManager.GameManager != null)
    {
        Console.WriteLine("StartPage: GameManager is not null. Rendering ChessBoard.");
        <ChessBoard GameManager="PuzzleManager.GameManager"/>
    }
    else
    {
        Console.WriteLine("StartPage: GameManager is null. ChessBoard will not render.");
        <p> Loading Puzzle </p>    
    }
</div>
}

@code {
    private bool _isGameActive = false;
    private bool _firstRender = true;
    
    private async Task StartSurvival()
{
try
{
await PuzzleManager.FetchAndLoadPuzzle(); // Initialize PuzzleManager
_isGameActive = true;
}
catch (Exception ex)
{
_isGameActive = false; // Reset game state
Console.WriteLine($"Error in StartSurvival: {ex.Message}");
}
}

}